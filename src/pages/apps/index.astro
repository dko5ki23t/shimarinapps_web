---
// Importing necessary components
import MainLayout from "@/layouts/MainLayout.astro";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import CardSmall from "@components/ui/cards/CardSmall.astro";
import CardWide from "@components/ui/cards/CardWide.astro";
import FeaturesStatsAlt from "@components/sections/features/FeaturesStatsAlt.astro";
import TestimonialsSectionAlt from "@components/sections/testimonials/TestimonialsSectionAlt.astro";

// Importing necessary functions from Astro
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@data/constants";

// Fetching all the product related content and sorting it by main.id
const app: CollectionEntry<"apps">[] = (
  await getCollection("apps", ({ id }) => {
    return id.startsWith("ja/");
  })
).sort(
  (a: CollectionEntry<"apps">, b: CollectionEntry<"apps">) =>
    a.data.main.id - b.data.main.id
);

// Define variables for page content
const title: string = "アプリ一覧";
const subTitle: string = "";
const pageTitle: string = `アプリ | ${SITE.title}`;
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "WebPage",
    "@id": "https://shimarinapps.com/products",
    url: "https://shimarinapps.com/products",
    name: "Hardware Tools | ScrewFast",
    description:
      "Explore the durability and precision of ScrewFast tools, designed for both professionals and enthusiasts.",
    isPartOf: {
      "@type": "WebSite",
      url: "https://shimarinapps.com",
      name: "ScrewFast",
      description:
        "ScrewFast offers top-tier hardware tools and expert construction services to meet all your project needs.",
    },
    inLanguage: "en-US",
  }}
>
  <div
    class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
  >
    <div class="mb-4 flex items-center justify-between gap-8 sm:mb-8 md:mb-12">
      <div class="flex items-center gap-12">
        <h1
          class="text-2xl font-bold tracking-tight text-balance text-neutral-800 md:text-4xl md:leading-tight dark:text-neutral-200"
        >
          {title}
        </h1>
        {
          subTitle && (
            <p class="hidden max-w-(--breakpoint-sm) text-pretty text-neutral-600 md:block dark:text-neutral-400">
              {subTitle}
            </p>
          )
        }
      </div>
    </div>
    <!--Displaying products in alternating styles. Alternative product gets different card styling.-->
    <!--Maps through all product entries and displays them with either CardSmall or CardWide based on their position.-->
    <section class="grid grid-cols-1 gap-4 sm:grid-cols-3 md:gap-6 xl:gap-8">
      {
        app.map((app, index) => {
          const position = index % 4;
          if (position === 0 || position === 3) {
            return <CardSmall app={app} />;
          } else {
            return <CardWide app={app} />;
          }
        })
      }
    </section>
  </div>
</MainLayout>
